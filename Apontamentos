Componentes: algo que iremos utilizar ao longo da app - ex: Footer, Navbar, ....
Views: páginas que vemos ao longo da app
router: rotas de acesso da aplicação
store: é um container que mantém o estado da aplicação
    |
    L> state: estado da aplicação, colocados todos os dados que queremos em memória e que vão ser acedidos por todos os componentes criados
                Base de dados centralizada
    |
    L>getters: 
    |
    L>mutations: altera a base dados, altera o estado
    |
    L>actions: chamar mutações



//:to - leva-nos para a rota que tem como nome "List Tasks"
<router-link :to="{name: 'ListTasks'}">Login</router-link>
<router-link to="/">Login</router-link>

//verificação se existe algo na localStorage, se existir ele carrega para um array
//se não existir cria um array vazio
tasks: localStorage.getItem("tasks")
? JSON.parse(localStorage.getItem("tasks"))
: [],


//Buscar à store a lista do select
$store.getters.getCategoriesForSelect
                ||
                \/
            //Na store
    Criar array com os dados do select
    

getNextTaskId: //No id (na view): this.$store.getters.getNextTaskId
//Na store > getters 
//Obter o id das tasks 
    getNextTaskId: (state) => {
      return state.tasks.length > 0 
        ? state.tasks[state.tasks.length - 1].id + 1
        : 1}
    }

//Dispatch -> chamar a ação da store




